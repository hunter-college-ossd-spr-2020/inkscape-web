--- plugin.ori.js	2020-02-29 23:25:13.342546900 +0100
+++ plugin.js	2020-02-29 23:21:48.361336300 +0100
@@ -1,5 +1,6 @@
 ï»¿/**
  * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.
+ *                    (c) 2019, Inkscape-web, Martin Owens, AGPLv3
  * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
  */
 
@@ -200,7 +201,7 @@
 						imgUrl,
 						useAttr;
 
-					if ( CKEDITOR.env.ie && !CKEDITOR.env.edge ) {
+					if ( true || CKEDITOR.env.ie && !CKEDITOR.env.edge ) {
 						imgUrl = CKEDITOR.getUrl( this.plugin.path + 'assets/iconsall.png' );
 
 						itemTemplate = new CKEDITOR.template(
@@ -312,7 +313,12 @@
 						event: 'click',
 						listener: function( event ) {
 							if ( event.data.getTarget().data( 'cke-emoji-name' ) ) {
-								this.editor.execCommand( 'insertEmoji', { emojiText: event.data.getTarget().data( 'cke-emoji-symbol' ) } );
+								this.editor.execCommand( 'insertEmoji', {
+									emojiText: event.data.getTarget().data( 'cke-emoji-symbol' ),
+									fullname: event.data.getTarget().data( 'cke-emoji-full-name' ),
+									name: event.data.getTarget().data( 'cke-emoji-name' ),
+									title: event.data.getTarget().getAttribute( 'title' ),
+								} );
 							}
 						}
 					} );
@@ -354,7 +360,7 @@
 					}
 				},
 				getEmojiSections: function() {
-					return arrTools.reduce( this.groups, function( acc, item ) {
+					var ret = arrTools.reduce( this.groups, function( acc, item ) {
 						// If group is empty skip it.
 						if ( !item.items.length ) {
 							return acc;
@@ -362,6 +368,17 @@
 							return acc + this.getEmojiSection( item );
 						}
 					}, '', this );
+					/* Add list of recently used Emoji (for Brynn!) */
+					var recent = JSON.parse(localStorage.getItem("recentEmoji") || '[]') || [];
+					var rec = '';
+					for (var i = 0; i < recent.length; i++) {
+						var emoji = recent[i];
+						rec += '<li class="cke_emoji-item"><a draggable="false" data-cke-emoji-full-name="'+emoji.fullname+'" data-cke-emoji-name="'+emoji.name+'" data-cke-emoji-symbol="'+emoji.emojiText+'" data-cke-emoji-group="recent" data-ske-emoji-keywords="" title="'+emoji.title+'" href="#" _cke_focus="1">'+emoji.emojiText+'</a></li>';
+					}
+					if(rec) {
+						ret = '<section data-cke-emoji-group="recent"><h2 id="recent">Recently Used</h2><ul>' + rec + '</ul></section>' + ret;
+					}
+					return ret;
 				},
 				getEmojiSection: function( item ) {
 					var groupName = htmlEncode( item.name ),
@@ -647,6 +664,15 @@
 
 			editor.addCommand( 'insertEmoji', {
 				exec: function( editor, data ) {
+					var relist = [data];
+					var recent = JSON.parse(localStorage.getItem("recentEmoji") || '[]') || [];
+					for (var i = 0; i < recent.length; i++) {
+						if(recent[i].emojiText != data.emojiText && i < 12) {
+							relist.push(recent[i]);
+						}
+					}
+					console.log("Saving:", relist);
+					localStorage.setItem("recentEmoji", JSON.stringify(relist));
 					editor.insertHtml( data.emojiText );
 				}
 			} );
