#
# Copyright 2016, Martin Owens <doctormo@gmail.com>
#
# This file is part of the software inkscape-web, consisting of custom
# code for the Inkscape project's django-based website.
#
# inkscape-web is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# inkscape-web is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with inkscape-web.  If not, see <http://www.gnu.org/licenses/>.
#
"""
Some generic utilities for improving caching and other core features
"""
import urllib
from io import StringIO

from django.core.exceptions import FieldDoesNotExist
from django.core.files.storage import FileSystemStorage, File

from django.db.models.lookups import Exact
from django.db.models.expressions import Col

from django.template.context import Context

def to(t=list):
    """Create an object from a generator function, default is list"""
    def _outer(f):
        def _inner(*args, **kwargs):
            return t(f(*args, **kwargs))
        return _inner
    return _outer

class BaseMiddleware(object):
    """
    When used by a middleware class, provides a predictable get()
    function which will provide the first available variable from
    first the context_data, then the view, then the middleware.
    """
    def get(self, data, key, default=None, then=None):
        """Returns a data key from the context_data, the view, a get
        method on the view or a get method on the middleware in that order.
        
        Returns default (None) if all fail."""
        if key in data:
            return data[key]
        view = data.get('view', None)
        if hasattr(view, key):
            return getattr(view, key)
        if hasattr(view, 'get_'+key):
            return getattr(view, 'get_'+key)()
        if hasattr(then, 'get_'+key):
            return getattr(then, 'get_'+key)(data)
        return default

